import scipy
import numpy

#Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением, равным 16.
#Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95, если выборочная средняя M = 80, а объем выборки n = 256.
print ("Задача 1")
print ()

sigma = 16
M = 80
n = 256
z = scipy.stats.norm.ppf(0.975)
print("[",M-z*(sigma/(n**0.5)),";",M+z*(sigma/(n**0.5)),"]",)

#В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, получены опытные данные:
#6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
#Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение с доверительной вероятностью 0,95.
print ()
print ("Задача 2")
print ()

array = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
ntwo = 10
std = numpy.std(array, ddof=1)
mean = numpy.mean(array)
t = scipy.stats.t.ppf(0.975,9)
print("[",mean-t*(std/(ntwo**0.5)),";",mean+t*(std/(ntwo**0.5)),"]",)

#3)Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
#Рост матерей  178, 165, 165, 173, 168, 155, 160, 164, 178, 175
#Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.
print ()
print ("Задача 3")
print ()

daughters = [175, 167, 154, 174, 178, 148, 160, 167, 169, 170]
mothers = [178, 165, 165, 173, 168, 155, 160, 164, 178, 175]
x_one = numpy.mean(mothers)
x_two = numpy.mean(daughters)
D_one = numpy.var(mothers, ddof=1)
D_two = numpy.var(daughters, ddof=1)
D = (D_one + D_two) / 2
delta = x_one - x_two
SE = numpy.sqrt(D_one/10+D_two/10)
t_two = scipy.stats.t.ppf(0.975,18)
print("[",delta-t_two*SE,";",delta+t_two*SE,"]",)

